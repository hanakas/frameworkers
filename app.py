import os
from flask import Flask
from flask import render_template, request, redirect, url_for
from flask_sqlalchemy import SQLAlchemy
from sqlalchemy import Column, Integer, Float, Date, Table, Integer, String, MetaData
from flask_migrate import Migrate


app = Flask(__name__)

## configure the SQLite database, relative to the app instance folder
app.config['SQLALCHEMY_TRACK_MODIFICATIONS'] = False
app.config["SQLALCHEMY_DATABASE_URI"] = 'postgresql://lbpuesgrgxtroy:c69c3611357041d19bfc89da2f6d757a5296901d40404c7ea29921cc83255672@ec2-54-208-11-146.compute-1.amazonaws.com:5432/dfih8c05rr38m0'
db = SQLAlchemy(app)
migrate = Migrate(app, db)


#Recommended framework based on the selected options
class Framework(db.Model):
    __tablename__ = "Framework"
    id = db.Column(db.Integer, primary_key=True, nullable=True)
    framework_name = db.Column(db.String(200))
    icon = db.Column(db.String(200))
    description = db.Column(db.Text)
    summary = db.Column(db.Text)
    what_resource = db.Column(db.String(500))
    how_to_use = db.Column(db.Text)
    application_resource = db.Column(db.String(500))
    related_framework_1 = db.Column(db.Integer)
    related_framework_2 = db.Column(db.Integer)
    related_framework_3 = db.Column(db.Integer)
    def __repr__(self):
        return f"Framework('{self.framework_name}')"

#Available answers to the questions 
class Option(db.Model):
    __tablename__ = "Option"
    id = db.Column(db.Integer, primary_key=True)
    option = db.Column(db.String(200))
    next_question_id = db.Column(db.Integer)
    framework_id = db.Column(db.Integer) 
    def __repr__(self):
        return f"Option('{self.option}')"

#Questions asked to the user to diagnose their scenario
class Question(db.Model):
    __tablename__ = "Question"
    id = db.Column(db.Integer, primary_key=True, nullable=True)
    question = db.Column(db.Text)
    option1 = db.Column(db.Integer, db.ForeignKey('Option.id')) 
    option2 = db.Column(db.Integer, db.ForeignKey('Option.id')) 
    def __repr__(self):
        return f"Question('{self.question}')"

#Insert all the database using a function
@db.event.listens_for(Question.__table__, 'after_create', once=True)
def insert_questions(*args, **kwargs):
    Questions= [[1,'Has your product already been released to a market in any form (i.e. Alpha, Beta, Official release)?', 1, 2],
        [2,'Is the next version of your product currently under development?', 3, 4],
        [3,'Do you have a single solid product idea that you want to develop?', 5, 6],
        [4,'Is your product an infrequent product (=products which customers only use once or twice in their entire user lifetime)?',7,8],
        [5,'Has a sufficient amount of market/user data been collected to conduct data analysis?',9,10],
        [6,'Are you starting to or already developing a product?',11,12],
        [7,'Do you want to generate or screen ideas?',13,14],
        [8,'How would you like to growth hack your product?',15,16],
        [9,"Is there a need for user interviews to understand your product’s market performance?",17,18],
        [10,'Are you satisfied with the allocation of marketing budgets for your product?',19,20],
        [11,'Is there a clear distribution of roles within your team?',21,22],
        [12,'Which stage is your product currently at?',23,24],
        [13,'Would you like to make prototype(s) to test and validate ideas?',25,26],
        [14,'Which aspect would you like to understand your product better?',27,28],
        [15,'Which would you especially like to see an increase for your product?',29,30],
        [16,'Do you need help in setting priorities to the product features/development tasks?',31,32],
        [17,"Do you know what skills/competencies are needed in your team’s product role?",33,34],
        [18,"Are the targeted customers’ needs already identified?",35,36],
        [19,'Do you want to identify a metric for your product? ',37,38],
        [20,'Would you like to assess how satisfied the customers are with the UX of your product?',39,40],
        [21,'Do you have a clear understanding of what features to include for the release?',41,42],
        [22,"Are you confident that your current product/features reflect your customer’s needs?",43,44],
        [23,'Have you already identified the user journey of your product idea?',45,46],
        [24,"Is ‘shipping early to customers’ a priority for your product?",47,48],
        [25,'Is your product developed in a startup or SaaS company?',49,50],
        [26,'Do you want to generate or evaluate a business model?',51,52],
        [27,'Would you like to plan your development process in a long-term (e.g. roadmap) or short-term (e.g. sprint) perspective?',53,54],
        [28,'Would you like to rank the features quantitatively or qualitatively?',55,56],
        [29,'What scope would you like to use the metric with?',57,58],
        [30,'Is there a need to reduce management overhead or speed up the development process?',59,60],
        [31,'Which factor is more important to consider for your product?',61,62],
        [32,'Is it realistically possible to gather all the key/relevant stakeholders of your product (i.e. sales team, investors, etc.) for a discussion?',63,64]]
        
    for i in Questions:
        db.session.add(Question(id=i[0],question=i[1],option1=i[2],option2=i[3]))
        db.session.commit()


@db.event.listens_for(Option.__table__, 'after_create', once=True)
def insert_options(*args, **kwargs):
    id_num = 0
    Options =[['Yes',2,0],['No',3,0],['Yes',4,0],['No',5,0],['Yes',6,0],['No',7,0],['Yes',0,1],['No',8,0],
                ['Yes',9,0],['No',10,0],['Yes',11,0],['No',12,0],['Idea generation',13,0],['Idea screening',0,2],['Data-driven',0,3],['Vision-driven',0,4],['Yes',0,5],
                ['No',14,0],['Yes',15,0],['No',0,6],['Yes',16,0],['No',17,0],['Concept testing',18,0],['Business strategy development',19,0],['Yes',0,7],['No',0,8],
                ['Customer Engagement',0,9],['Customer Satisfaction',20,0],['Acquisition of new customers',0,10],['Usage of product by existing customers',0,11],
                ['Yes',21,0],['No',22,0],['Yes',0,12],['No',0,13],['Yes',23,0],['No',24,0],['Yes',25,0],['No',26,0],['Yes',0,14],['No',0,15],['Yes',27,0],['No',28,0],
                ['Yes',0,23],['No',0,24],['Yes',0,16],['No',0,17],['Yes',0,18],['No',0,19],['Yes',0,20],['No',29,0],['Generate',0,21],['Evaluate',30,0],['Long-term',30,0],['Short-term',0,25],
                ['Quantitatively',31,0],['Qualitatively',32,0],['Individual/Team level',0,26],['Company level',0,27],['Yes',0,28],['No',0,29],['Cost vs benefit',0,30],['Impact on users',0,31],['Yes',0,32],['No',0,33]]
    for i in Options:
        id_num += 1
        db.session.add(Option(id = id_num, option=i[0], next_question_id=i[1], framework_id=i[2]))
    db.session.commit()

@db.event.listens_for(Framework.__table__, 'after_create', once=True)
def insert_frameworks(*args, **kwargs):
    Frameworks =[[1,'ICED Theory', 'iced.svg', 'Fuels growth of infrequent products by mapping and managing the I, C, E, and D dimensions (Infrequency, Control, Engagement, and Distinctiveness).',"The ICED theory presents a mental model to help address the challenges faced by infrequent products and facilitates the crafting of a growth-oriented approach. ICED represents the various dimensions of an infrequent product. I = Degree of Infrequency; C = Degree of Control Over the User Experience; E = Degree of Engagement Before, After, and During The Transaction; D = Distinctiveness of The Product. Running an infrequent product business necessitates a holistic understanding of all aspects of the business—from the industry structure and the business model to the end-user experience delivered by the product. ICED theory offers an integrated approach for navigating all of these aspects for infrequent products. ICED Theory decreases the key frictions associated with an infrequent product." ,"https://www.reforge.com/blog/iced-theory-growing-infrequent-products#:~:text=The%20ICED%20theory%20presents%20a,Control%20Over%20the%20User%20Experience", "Assess each of the four factors in the context of your product by placing your product in a spectrum of the factors: Degree of Infrequecy (I) informs key business decisions, such as monetization and the cost of traffic acquisition. The more infrequent the product, the poorer the product recall by the customer. Degree of Control Over the User Experience (C) is a measure that assess how much of your product has control over an end-to-end user experience. Providing an end-to-end experience ensures customer delight; delighted customers lead to greater WOM and retention, in addition to enabling increased monetization. Degree of Engagement (E) is determined by understanding how complex a transaction is, the degree of touch, and predictability of retention. Finally, Distinctiveness (D) of the Product (D) measures how strong the brand image is for users to recall the product easily. In an infrequent product, the story registered in the user's mind governs a strong brand recall that can, in turn, increase customer acquisition or repeat acquisition. ", "https://www.reforge.com/blog/strategies-to-grow-infrequent-products", 3,4,5],
                    [2,'HIPE', 'hipe.svg', 'Evaluates new product ideas and growth opportunities by considering the four factors of Hypothesis, Investment, Precedent, and Experience. ', "Jeff Chang, the Growth Tech Lead at Pinterest, coined the HIPE framework for identifying and evaluating product growth opportunities. According to HIPE framework, there are four main factors that can be considered when evaluating opportunities: Hypothesis, Investment, Precedent, and Experience. Evaluation of ideas are important especially in growth, since working on the right projects instead of the wrong ones is usually at least a factor of 10 in terms of experiment impact. It’s normal to have many experiments that don't beat the control group and therefore have no impact. However, as Product Managers, you do want some major successes to balance those out. Great experiment evaluation is a required skill for any high impact growth team. ","https://www.growthengblog.com/blog/2018/6/11/the-4-most-important-factors-when-evaluating-growth-opportunities?ref=https://product-frameworks.com", "After the ideation phase, collect all the product ideas that you have and for each, ask the following questions from each of the four factors: Hypothesis - Why will this idea have a significant impact on metrics?; Investement - How much time will we have to invest in this project?; Precedent - Is there a precedent for this working in the past?; Experience - Is this change a good user experience?", "https://www.growthengblog.com/blog/2018/6/11/the-4-most-important-factors-when-evaluating-growth-opportunities?ref=https://product-frameworks.com", 7,8,22],
                    [3,'DIBB', 'dibb.svg', 'Builds alignment and transparency by starting with the Data, distilling an Insight from the data, presenting a Belief from the insight, and placing a Bet to pursue and test the belief.',"The DIBB Framework involves starting with Data (D) and the observable facts; distilling an Insight (I) from that data; stating a Belief (B) or hypothesis based on the insight; and finally defining a Bet (B) to pursue and test the belief. DIBB points to the importance of updating and challenging bets with new information from the feedback loops that action provides, and that such bets need to be used as a guide for high-value action rather than a ‘stick’ to limit autonomy." ,"https://modelthinkers.com/mental-model/dibb-framework", "Create a Bet Board to prioritise and display your bets for greater transparency and to allow people to both debate them and align to them more effectively. This can be done by going through the four factors as follows: Data (D) — Analyse the available data to better understand the current state of play. Think about collating data like market trends, sales stats or customer behavioural data; Insights (I) — Translate the data into (actionable) insights; working through the available data to look for patterns or potential questions. You can also predictive modelling to understand trends and implications; Belief (B) — A belief is a hypothesis based on the insights generated. This isn’t a fact, but purely based on your understanding of the data and insights; Bet (B) — A bet is an action to either test or capitalise on a (strong) belief. Bets often require significant investment in return for a large upside. It’s important to define the outcome for each bot and measurable success metrics.", "https://slidemodel.com/templates/dibb-model-powerpoint-template/", 1, 4, 5],
                    [4,'GLEe', 'glee.svg', 'Helps create the next growth wave by defining a new product focus and phasing.',"The GLEe model, which stands for Get Big, Lead, Expand, comes from former VP of Product at Netflix Gibson Biddle. This framework is intended to help product leaders think strategically and long-term about their company growth and evaluate which stage they are currently in.","The GLEe model, which stands for Get Big, Lead, Expand, comes from former VP of Product at Netflix Gibson Biddle. This framework is intended to help product leaders think strategically and long-term about their company growth and evaluate which stage they are currently in.","https://gibsonbiddle.medium.com/how-to-run-a-quarterly-product-strategy-meeting-a-board-meeting-for-product-3a14c4d53d1b", "Set up a Quarterly Product Review Meeting with the CEO, Head of Product, other key product leaders, Research leader, Data leader, Design leader, and the Technology leader. The first 30 minutes of the Quarterly Product Strategy meeting will reinforce the company’s overall product strategy. Throughout the meeting, create a one-pager of articulated strategy by asking each product leader to outline their key strategies, metrics, and tactics. ", 1,3,5],
                    [5,'USER', 'user.svg', 'Maximizes product feedback by determining what is worth acting on, what will move the product forward, and what should sit on a shelf.', "USER is a framework for triage of product feedback. It can be used both for user feedback and for handling internal ideas. USER stands for the 4 steps to be applied to incoming feedback: Understand (the point of the feedback), Scrub (away if not relevant), Extract (a theme by clustering feedback and mapping to user problems), Rank (once at this stage vs other potential features).", "https://betterproduct.community/u-s-e-r-framework-for-maximizing-product-feedback/", "Follow the 4-step process (each steps represent the acronym of this framework name!): Understand what people are actually saying - Ask 'Is that pain something we are even interested in solving?'; Scrub the feedback - Ask 'Does the feedback align with your vision and strategic goals?'; Extract a theme - Cluster feedback and extract common themes so you can approach a solution holistically. This requires you to sit on feedback that could be a “quick fix,” but I assure you it will be worth it. Ideally you’ll do some focused user research to dig at the root of the pains and goals, then design a well-rounded solution; Rank against other initiatives - Force yourself to stack rank feedback and associated changes against other priorities in your product backlog.","https://innovatemap.com/how-to-evaluate-if-your-product-roadmap-aligns-with-your-business-goals/",9, 14, 15],
                    [6,'PESO', 'peso.svg', 'Optimizes marketing communications by categorizing media usage to Paid, Earned, Shared, or Owned media.', "PESO is a framework for categorizing marketing channels and stands for Paid, Earned, Social and Owned. For product managers (PMs), it is important to think about how different feature launches can be handed over to marketing in the rollout plan, and then it is helpful to make sure that different types of marketing channels are properly covered.", "https://funnel.io/blog/peso-framework#:~:text=Simply%20put%2C%20the%20PESO%20framework,to%20base%20their%20communication%20strategy.", "List down all the marketing channel that your product already has or would like to consider having. Categorize the channels into the four PESO categoies as follows: Paid media - an investment in distribution of owned assets or creative (e.g. print and television advertisements, search keywords, ads and promoted social media content); Earned - a value exchange of content versus third party validation (e.g. media relations, blogger relations, organic influencer content); Shared - pushing content through owned social channels; typically also requires paid (e.g. Facebook, Instagram, LinkedIn), Owned - brand media and community relationships; requires long term investment (e.g. apps, email, podcasts and websites)","https://slidebazaar.com/items/peso-model-powerpoint-template/",10, 11, 5], 
                    [7,'Design Thinking', 'design.svg', 'Encourages innovation through outlining a phase-based process from empathizing with the users to implementing the product.', "Design thinking is “a human-centered path to innovation” centered around “empathy for the people you’re trying to design for.” What’s interesting about this framework is that it approaches the product manager’s early-stage thinking from a different vantage point—literally, because you start by be viewing the world from your customer’s point of view and trying to see their aspirations, wishes, concerns and frustrations.", "https://www.interaction-design.org/literature/article/5-stages-in-the-design-thinking-process", "Go through the five stages of design thinking as described as follows: Empathizing - understand your users and their needs; Defining - analyze and identify issues to be solved; Ideating - create and share ideas, even the off-the-wall ones; Prototyping - draw up solutions; Testing - just as it says, go forth and test your solutions.","https://sprintbase.io/",2, 8, 22],
                    [8,'CIRCLES Method', 'circles.svg', 'Helps evaluate the context, constraints, parameters, and requirements of a product design in a structured manner. ', "Although CIRCLES method is typically used in Product Management Interviews (specifically for the design questions such as 'Design a computer keyboard for elderly people'), it can also be widely used during the product lifecycle to increase the likelihood of building a successful product design.The CIRCLES Method is a product design framework based on following a specific path and answering the right questions to fully understand what you need to design and why. The stages of the process form the acronym. Comprehend the situation. Identify the customer. Report the customer’s needs. Cut through prioritization. List solutions. Evaluate trade-offs. Summarize your recommendation.", "https://producthq.org/agile/product-management/circles-method/", "Follow the following 7 stages of the CIRCLES method: C – Comprehend the situation. Who is the product designed for? Why do customers need it? How does it work? Where and when is it available? How does the business define customer satisfaction? Is satisfaction or another important metric failing to meet targets?; I – Identify the customer. Be prepared and have a list of potential target audiences that will benefit from the product. Then, choose one buyer persona that best supports your argument; R – Report the customer’s needs. This can be done by creating a user story to delve deeper and understand user needs and their intended benefits; C – Cut, through prioritization. Narrow the various needs of the customer down to one you feel will have the greatest impact. Think about how certain needs would be prioritized according to time, money, or other constraints. Here, a prioritization matrix or A/B testing is appropriate; L – List solutions. For the identified need, list several solutions; E – Evaluate trade-offs. Evaluation requires that the candidate be analytical, objective, and thoughtful. Trade-off criteria should be defined to better get your point across. Solutions should be analyzed via a pros and cons list; S – Summarise your recommendation. In no more than 30 seconds, make a product or feature recommendation and reiterate why it is most beneficial to the user. In closing, clarify why your preferred solution is better than the others.","https://fourweekmba.com/circles-method/",2, 7, 22],
                    [9,'DAU / MAU', 'dau.svg', 'Evaluates the engagement level of the users by calculating the the ratio between the Daily Active Users and Monthyl Active Users.', "DAU stands for Daily Active Users and MAU stands for Monthly Active Users. DAU / MAU is the ratio between the two, and is an expression of how engaged users are with a product. A ratio of 1 means that all users come back every day, i.e. incredible engagement, whereas a ratio of 1/30 is as bad as it gets.", "https://www.geckoboard.com/best-practice/kpi-examples/dau-mau-ratio/", "The formula for calculating the DAU/MAU ratio is as follows: DAU/MAU Ratio = Daily Active Users (DAUs) / Monthly Active Users (MAUs). DAU is counts the number of unique visitors that interact with the site, platform, or app on a specific date. MAU counts the number of unique visitors that engage with a site, platform, or app within a specified month. The DAU/MAU ratio of most companies is often cited to range from around 10% to 25%, yet certain apps can easily surpass 50+%, which normally consist of messaging apps like WhatsApp.Of course, the closer to 100% the ratio is, the better the user engagement, but realistically that would be unattainable (i.e. it would imply that every user uses the platform every single day).","https://www.wallstreetprep.com/knowledge/dau-mau-ratio/",5, 14, 15],
                    [10,'AIDA', 'aida.svg', 'Identifies the cognitive stages the user experiences before making a consumer decision through understanding the Attention, Interest, Desire, and Action.', "AIDA stands for Attention, Interest, Desire, Action. It is a marketing funnel framework that looks at the journey of prospective customers until they sign up. As product managers (PMs) naturally gravitate towards what happens after customers sign up, this is an especially relevant framework for them to think about. A PM should know how user come to their product and why.", "https://fourweekmba.com/aida-model/", "Ask yourself some key questions throughout the stages. Awareness: How do we make buyers aware of our products or services? What is our outreach strategy? What is our brand awareness campaign? Which tools or platforms do we use? What should the messages be?; Interest: How will we gain their interest? What is our content strategy? Social proof available to back up our reputation? How do we make this information available and where ? ie. on website, via videos, customer ratings; Desire: What makes our product or service desirable? How do we interact personally to make an emotional connection? Online chat? Immediate response to Twitter feed? Share tips and advice?; Action: What are the call to actions and where do we place them? Is it easy for consumers to connect and where would they expect to find it? Think about which marketing channel/platform you are using and how to engage ie. across emails, website, landing pages, inbound phone calls etc.; Retention: What is the proposition to retain loyalty? At what stage do we encourage this on-line and off-line, and how?","https://creately.com/usage/aida-model-templates/",5, 6, 11],
                    [11,'Hooked Method', 'hooked.svg', 'Forms user habits by identifying a four-phase loop of trigger, action, variable reward, and investement.', "'The Hook' is when you create a product or service that is designed to take your user’s problem and connect them to your solution with enough frequency to form a habit. A trigger has four parts, a trigger, an action, a reward, and an investment. The goal is to result in voluntary, high-frequency engagement. At its core, the Hook Model is about creating a customer habit. It also seeks to connect a customer’s problem to a company’s solution with enough frequency to make the engagement an ongoing practice. It’s important to understand what drives customer behavior in order to build products that customers use habitually. With this knowledge, you can then create a significant competitive advantage for businesses. Product teams and product managers should use the Hook Model early in the product development process because it ensures that new products or services become habit-forming.", "https://medium.com/@svharivinod/making-your-product-a-habit-the-hook-framework-7815f94a2ddf", "The cycle in the Hooked Model is comprised of a Trigger, Action, Reward, and Investment. The first step is finding both external and internal Triggers to prompt the intended action. An external trigger is something the user sees. An internal trigger is something the user feels or thinks. For your various personas, what are the applicable Triggers? What are the external and internal triggers to use your product? The Action is the minimum interaction the user needs to have with your product to get to the Reward (something they’ll like- next item). What is your most minimum action the user can take in anticipation of reward? The Reward is the why, the objective for the user, emotionally speaking. How do you reward the user? Is there interesting variability? The last phase of the Hook is where the user is asked to do bit of work. How do users load the next trigger, store value, and create preference by investing effort into your product? What opportunities are there to improve on that?","https://miro.com/miroverse/applying-hooked-model-to-product-ux/",6, 10, 15],
                    [12,'DACI', 'daci.svg', "Assigns specific roles to team member in order to improve a team's effectiveness and velocity on projects.", "The DACI decision-making framework is a model designed to improve a team’s effectiveness and velocity on projects, by assigning team members specific roles and responsibilities when it comes to group decisions.The names for these roles and responsibilities form the acronym DACI: Driver (the person who drives the decision), Approver (the person who makes the decision), Contributors (the people or teams whose work or knowledge aid in the project), and Informed (the people whose work might be affected by these decisions and who therefore need to be kept in the loop).", "https://www.productplan.com/glossary/daci/", "Follow the followting 3 steps: Step 1 - Break the project into tasks, and assign each a Driver. After you’ve established the DACI roles among your project’s team, you’ll first want to agree on a Driver to spearhead the overall project. Step 2 - Assign both Approvers and Contributors to each task. Now the team should agree on the Approver (ideally, one per task) and Contributors assigned to each task. Step 3 - Define the actual workflow. Now the project’s main Driver starts developing the action plan, answering such questions as: Will we have a kickoff meeting? Who should attend? How often should we have team meetings once the project is underway?","https://www.google.com/search?q=daci+framework&oq=DACI&aqs=chrome.1.69i57j35i39j46i340i512j46i199i340i465i512j46i512j0i512l2j46i340i512j0i512.6865j0j4&sourceid=chrome&ie=UTF-8",13, 23, 24], 
                    [13,'Product Team Competencies', 'ptc.svg', "Assesses the team's performance and provides alignment on the focus of the product.", "Product Team Competencies was designed to make the clear vital skills that are needed for project management, especially when it comes to digital products. The model is a 2-dimensional spectrum of skills or capabilities. It places product leaders on one of two sides: strategic or tactical and external or internal. The Product Team Competencies framework is useful for assessing, conveying, and enhancing overall team capabilities.", "https://nealcabage.com/framework/product-team-competencies/", "By looking at the model diagram (which can be accessed through the 'Read more' in the What is it? section), check what competencies you have or not. The top half contains the competencies that are crucial for senior product managers. In the top-left portion, you will get an idea of what skills are useful if you’re a consumer or market-facing product leader. On the other side are the likely competencies for technical senior PMs.The bottom half of the framework pertains to upcoming product managers, usually the “heads down” Product Owners (Scrum). Those working on consumer products usually want to focus on the bottom-left portion. Junior PMs working on internal tools will lean more toward the bottom-right.","https://survey.sequentlearning.com/s3/PMAcumen",12, 23, 24],
                    [14,'HEART', 'heart.svg', "Evaluates the user experience (UX) of the product by using five metrics of Happiness, Engagement, Adoption, Retention, and Task success.", "Google created the HEART framework to bring quantitative metrics to the “touchy-feely” world of UX. This flexible methodology allows designers to quantify either specific features or the entire user experience according to five metrics. Those are happiness, engagement, adoption, retention, and task success.", "https://research.google/pubs/pub36299/", "To quantitatively measure the 5 categories, you’ll use the Goals-Signals-Metrics approach Google also developed. This involves setting goals, defining signals to find out if you’re making progress, and establishing metrics to determine if you’re meeting your goals.","https://www.productplan.com/learn/heart-framework-product-decisions/",5, 9, 15],
                    [15,'Net Promoter Score', 'nps.svg', "Measures user loyalty and customer satisfaction to the product to evaluate the performance of the product.", "The Net Promoter Score (NPS) is the most commonly used measurement of customer satisfaction. It is based on simply asking users how likely they are to recommend the product to others on a scale of 0-10, and the responses are then calculated as a score from -100 to 100, where 20 is considered good and 40 is considered great.", "https://hbr.org/2021/11/net-promoter-3-0", "Conduct an interview or suvey to existing customers, asking 'How likely is it that you would recommend [Organization X/Product Y/Service Z] to a friend or colleague?'. Respondents give a rating between 0 (not at all likely) and 10 (extremely likely) and, depending on their response, customers fall into one of 3 categories to establish an NPS score: Promoters respond with a score of 9 or 10 and are typically loyal and enthusiastic customers; Passives respond with a score of 7 or 8. They are satisfied with your service but not happy enough to be considered promoters; Detractors respond with a score of 0 to 6. These are unhappy customers who are unlikely to buy from you again, and may even discourage others from buying from you.","https://www.surveymonkey.com/mp/nps-calculator/",5, 9, 14],
                    [16,'Working Backwards', 'wb.svg', "Drafts a mock press release to conduct a gut-check about a product's viability.", "Amazon's approach to product development is known as 'Working Backwards'. All projects work backwards from the ideal customer end state. This usually starts with a mock press release announcing the finished product. The press release is targeted at the end customer and contains information about the problem, how current solutions are failing, and why the new product will solve this problem.", "https://www.productplan.com/glossary/working-backward-amazon-method/", "Write a 1 page mock press release with the following included: Heading - This could be the product’s name, preferably framed in a way that makes it appealing to customers; Subheading - What is the core benefit of the product in a single line?; Summary - As the name suggests, simply summarize what the product does along with its main benefit; Problem - What is the specific problem this product exists to solve?; Solution - How does the product solve the problem?; Quote - Create a fictional spokesperson and ask for a one-liner explaining why this product is a must-have; How to get started - Explain why it’s so easy to hit the ground running with this product; Customer quote - Break the cardinal rule, and knowingly invent a customer testimonial; Call to action - Finish up the press release by letting the reader know how to find out more or start using the product.","https://www.mural.co/templates/working-backwards",17, 18, 19],
                    [17,'Customer Journey Map', 'cjm.svg', "Visualizes the stages the users go through when interacting with the product.", "Customer Journey Map is a visual representation of all the steps a typical prospect or customer takes when interacting with your product or service. The framework, sometimes called the 5 Es, helps to have a good grasp of the customer’s experience. It makes it easier for product managers to gain insights into customer behavior so that they can develop a strategy most fitting for the observed behavior.", "https://www.techtarget.com/searchcustomerexperience/definition/customer-journey-map", "Follow the 6 step process: Step 1 - Decide what you want from this journey map; Step 2 - Figure out your personas’ goals; Step 3 - Identify all touchpoints; Step 4 - Determine what you want your journey map to show; Step 5 - Take the customer journey yourself; Step 6 - Adjust your journey map as needed.","https://www.lucidchart.com/pages/examples/customer-journey-mapping-software",16, 18, 19], 
                    [18,'4D', '4d.svg', "Breaks down the product development into four distinct phases of Discovery, Design, Delivery, and Deduction.", "The 4D framework breaks up the product development process into four distinct phases: Discovery, Design, Delivery, and Deduction. These 4 stages form a positive feedback loop, where opportunities and ideas are validated during the Discovery phase, which is then turned into a design, where it then becomes a working software through the Delivery phase, and finally summarizes the learning from all the stages in the Deduction phase. It is our job to go back, look at the data and feedback, and start from the beginning again to enforce the feedbaack loop.", "https://medium.com/qlue/4-d-product-management-framework-736217da9d53", "Follow each phase: Discovery - The discovery phase is focused on the problem and opportunity space. This includes validating that this is a real customer problem and will meaningfully impact the business with measurable success criteria in place; Design - Once the problem and opportunity are defined we begin to work on a solution. The design solution can take many forms with varying levels of fidelity ranging from wireframes to functioning prototypes. It's good practice to involve the delivery team in the design phase to vet the feasibility of the design solution; Delivery - With the design in hand, the team can then begin to develop and deliver the solution. It's up to the team to determine how to define 'done' and when a solution is ready for customers; Deduction - This phase is about measuring the delivered solution and determining if this does solve the customer problem and provide business value. This can be done through qualitative and quantitative measures using the defined success criteria from the Discovery phase.","https://www.sketchbubble.com/en/presentation-4d-model-of-project-management.html",16, 17, 19],
                    [19,'Jobs To Be Done', 'jtbd.svg', "Identifies the need statements of users by understanding the user's specific goal, or 'job', and the thought processes that would lead them to 'hire' the product to complete the job.", "JTBD (jobs to be done) framework is designed to change the team’s focus from the product to the customer. This approach helps a product team learn what its customers want to do when they buy a product or service, so the company can focus its development on satisfying those needs.", "https://jtbd.info/2-what-is-jobs-to-be-done-jtbd-796b82081cca", "Categorize the jobs that customers are trying to get done. There are two different types of JTBDs: Main jobs to be done - describes the task that customers want to achieve; Related jobs to be done - customers want to accomplish in conjunction with the main jobs to be done. Then, within each of these two types of JTBDs, there are: Functional job aspects — the practical and objective customer requirements; Emotional job aspects — the subjective customer requirements related to feelings and perception. Finally, emotional job aspects are further broken down into: Personal dimension — how the customer feels about the solution; Social dimension — how the customer believes he or she is perceived by others while using the solution.","https://www.cabgfx.com/jtbd/",17, 18, 20],
                    [20,'AARRR Metrics', 'aarrr.svg', "Evaluates user satisfaction through five metrics of Acquisition, Activation, Retention, Referral, and Revenue.", "Explicitly designed for startups, AARRR is a five-step framework to help young businesses grow. Developed by venture capitalist Dave McClure, the acronym forms those five key metrics McClure believes every startup should focus on. They are acquisition, activation (referring to the user’s first product experience), retention, referral, and revenue. This will give you a clear insight into which parts of the customer life cycle are performing well and where you have potential to improve your conversion funnel.", "https://www.designwithvalue.com/aarrr-framework", "Follow these 4 steps: Step 1 - Identify your AARRR Pirate Metrics; Step 2 - Set up processes to track and analyze these AARRR pirate metrics. Assuming your product, app, or content is digital and online; you can use tools such as Google Analytics or KISSmetrics to capture much of this information; Step 3 - Run tests for all stages of user behavior to identify better approaches. As you gather this data, McClure recommends running plenty of A/B tests to find places where you can improve user engagement at each stage of the AARRR framework; Step 4 - Use these metrics to improve your initiatives. Finally, as you learn what is and isn’t working at each level of your AARRR framework, you and your team can start looking for ways to adjust your product management and marketing initiatives accordingly.","https://www.designwithvalue.com/aarrr-framework-free-worksheet",21, 26, 27],
                    [21,'Lean Canvas', 'lc.svg', "Creates a 1-page business plan by deconstructing the product idea into its key assumptions.", "Lean Canvas is a 1-page business plan template created by Ash Maurya that helps you deconstruct your idea into its key assumptions. It is adapted from Alex Osterwalder's Business Model Canvas and optimized for Lean Startups. It replaces elaborate business plans with a single page business model.", "https://hbr.org/2013/05/why-the-lean-start-up-changes-everything", "Using the lean startup template (which can be accessed from the 'Read more' below) follow these steps: 1 - Start with the ‘Customer Segments’, 2 - Define the Problem Your Product Solves, 3 - Decide on Revenue Streams, 4 - Provide solution, 5 - Write down Unique Value Proposition, 6 - Find Effective Channels, 7 - List Key Metrics, 8 - Estimate Cost Structure, 9 - Create Unfair Advantage","https://leanstack.com/lean-canvas",22, 26, 27],
                    [22,'Ansoff Matrix','am.svg', "Identifies growth opportunity by conceptualizing the level of risk associated with different strategies.", "The Ansoff Matrix, Product-Market Matrix, or the Product-Market Expansion Grid, is a 2×2 matrix showing four possibilities: market development, product development, market penetration, and diversification. Businesses typically use it to analyze and devise their growth strategies. The diagram, also known as the Product/Market Expansion Grid, was created by an applied mathematician and business manager named H. Igor Ansoff.", "https://corporatefinanceinstitute.com/resources/management/ansoff-matrix/", "Using the tool of your choice, design your grid with each category. Next, plot the potential strategies you can pursue in each quadrant. Consider the practical ways you can grow the company. Use a Risk/Reward Matrix template to identify the ways you are putting your business in danger and the potential challenges involved. Now that you know what you might face, create contingency plans that address these risks. Focus on the risks with the highest probability and level of impact. After walking through these steps, you will hopefully know which growth strategy is the best option to pursue. Take this direction and start planning how you’ll implement it!","https://blog.mindmanager.com/ansoff-matrix/",21, 26, 27],
                    [23,'Opportunity Solution Tree','ost.svg', "Plans the best path to the desired outcome of the product in the ideation/discovery phase by visualizing the opportunities.", "An Opportunity Solution Tree (OST) is a visual aid that helps enable the product discovery process through the non-linear organization of ideation flows, experimentation, and identification of gaps. Simply put, an OST is a visual plan for how you will then reach a clear desired outcome. An opportunity solution tree aims to link the ultimate outcome, which is driven by user problems or a product vision, and the problems that prevent the product team from reaching the desired outcome (opportunities) with their possible solutions. It also outlines experiments to validate whether the solution helps to solve the problem and achieve the outcome.", "https://www.productplan.com/glossary/opportunity-solution-tree/", "To create a successful OST, start by identifying the outcomes needed for the business. Now that you have the outcome defined, you and your product team should start gathering qualitative and quantitative user insights to understand the obstacles to achieving the outcome.Once you identify solutions, the product team can decide on how many opportunities they want to pursue at once.Once the opportunity is chosen and many solutions identified, the product team can start experimenting with those solutions.","https://miro.com/templates/opportunity-solution-tree/",12, 13, 24], 
                    [24,'Quality Function Deployment','qfd.svg', "Translates user needs into technical requirements for the product's development. ", "Quality Function Deployment (QFD) is a popularized 50-year-old methodology for product development and production. Build the approach around listening to customers and incorporating their voice into the team’s plans. The QFD framework translates customers’ desires, needs, and expectations into technical requirements for the product’s development. The idea is to take the customer’s voice into every stage of production throughout the product’s lifecycle.", "https://www.productplan.com/glossary/quality-function-deployment/", "Fill in the House of Quality: Also known as the product planning matrix, the House of Quality (HoQ) is practically the most essential stage of the QFD. This is where every bit of detail must be taken into consideration, as it’s going to set the pace for the succeeding stages of the four-phase QFD. Further, HoQ serves as a primary graphical representation of the product planning and development process.","https://quality-one.com/qfd/",12, 13, 23],
                    [25,'Eisenhower Matrix','em.svg', "Prioritizes a list of tasks or agenda items by categorizing them according to their urgency and importance.", "The Eisenhower Matrix can help teams improve their prioritization, productivity, and decision making. Named after a method used by President Dwight Eisenhower, this framework involves drawing four squares, two on top of the other. You’ll label the x-axis Urgent and Not Urgent, and for the y-axis, you’ll use Important and Not Important. This framework gives you four possibilities: from Important and Urgent, to Unimportant and Not Urgent. Once you’ve placed the initiatives on your list into one of these four boxes, you’ll know which to work on first—those in the upper-left quadrant, Important and Urgent.", "https://www.productplan.com/glossary/eisenhower-matrix/", "Quadrant one is the “do” quadrant, and this is where you’ll place any tasks that are both urgent and important. Quadrant two is the “schedule” quadrant, and this is where you’ll place any tasks that are not urgent but are still important. Because these tasks affect your long-term goals but don’t need to be done right away, you can schedule these tasks for later. Quadrant three is the “delegate” quadrant, and this is where you’ll place any tasks that are urgent but not important. These tasks must be completed now, but they don’t affect your long-term goals. Place the remaining items on your to-do list in the fourth quadrant, which is the “delete” quadrant. ","https://app.eisenhower.me/sign-in",28, 29, 30],
                    [26,'OKR','okr.svg', "Formulates outcome-driven goals to ensure team alignment on objectives that matter the most.", "OKR (objectives and key results) is a framework that helps companies set clear goals and track measurable results. OKR ensures the team is moving in the same direction by focusing you on the most critical issues in the organization. The OKR method breaks the issue down into two parts: 1. The objective. What do you need to achieve? This is a simple, clear, and action-oriented goal.2. The key results. What can help you to achieve the objective? It’s the verification for the Jobs To Be Done and it helps to keep your path to the goal specific, time-bound, and realistic.", "https://www.google.com/search?q=okr+framework&oq=OKR+&aqs=chrome.1.69i57j0i20i263i512j0i512l8.4420j0j4&sourceid=chrome&ie=UTF-8", "It’s super important that you set goals – not more than four so your team is able to reach all of them successfully and efforts are not being diluted achieving more/other goals. Be clear with your objectives as this will help teams to achieve every one of them. Define your key results from the beginning alongside your objectives and try to set measurable key results – maximum three per objective. For example: Increase conversion rate by 50%, or increase likes by 35%. With numbers included, you’re able to see at the end whether this number has been reached, or not – making your key results measurable. ","https://weekdone.com/?utm_referrer=https%3A%2F%2Fwww.google.com%2F",20, 21, 27],
                    [27,'North Star','ns.svg', "Identifies a single, crucial metric that best captures the core value that a product delivers to the users.", "The North Star Framework is a model for managing products by identifying a single, crucial metric that best captures the core value that a product delivers to customers. The framework is designed to measure the relationship between customer and business value to drive organizational alignment, communicate impact and hold teams accountable to a meaningful outcome. Based on the North Star metric, product teams should then be focusing on prioritizing and executing on product initiatives designed to move that metric.", "https://amplitude.com/north-star/about-the-north-star-framework#:~:text=North%20Star%20Framework-,What%20is%20the%20North%20Star%20Framework%3F,to%20%5Bits%5D%20customers.%22", "Create a single purpose statement that satisfies the following qualities: It expresses value. We can see why it matters to customers reflected in it; It represents vision and strategy; It's a leading indicator of success. It predicts future results, rather than reflecting past results; It's actionable. We can take action to influence it; It's understandable. It's framed in plain language that non-technical partners can understand; It's measurable. We can instrument our products to track it; It's not a vanity metric. When it changes, we can be confident that the change is meaningful and valuable, rather than being something that doesn't actually predict long-term success, even if it makes the team feel good about itself.","https://amplitude.com/north-star",20, 21, 26],
                    [28,'GIST Planning','gist.svg', "Plans the development of the product by breaking down the planning horizon into four parts of Goals, Ideas, Step-projects, and Tasks. ", "A product-planning framework, GIST is designed to help reduce management overhead, speed development, and deliver successful products. The name stands for the key pillars of the approach: goals, ideas, step-projects, and tasks.", "https://itamargilad.com/gist-framework/", "Use a template (which can be accessed from the 'Read more' button below) to create the GIST board: Goal, Idea, Step, and Task, same as the steps of the original GIST planning process. These 4 Databases can be visualized with boards, lists, timelines, tables, and more. You have a pre-made Goals timeline, Idea bank, Steps Kanban board, Steps by Quarter board, and Tasks Kanban board.","https://fibery.io/templates/gist-planning",29, 25, 30],
                    [29,'666 Roadmap','666.svg', "Outlines a product roadmap over three timelines of the next 6 years, 6 months, and 6 weeks.", "A really effective way of thinking about your product roadmap is over three timelines: the next 6 years (one that sets out your long-term vision), next 6 months (one that sets out your long-term vision), and next 6 weeks (a shorter-term plan that is concrete and doesn't change). In a rapidly changing environment businesses should be highly adaptive but still require a compelling, longer-term vision to work towards and this creates a good balance.", "https://www.intercom.com/blog/666-product-roadmap/", "Create a roadmap in the following time spans: The next 6 years - Your mind’s eye view of the world 6 years from now, taking into account how it will have changed because of the change you enacted, and how it will have changed based on plotting today’s existing trends in a straight/exponential line into the future; The next 6 months - Your plan for building things that will make a significant impact on your journey towards the change you want to enact in the world. When you look at what you will build within 6 months time you think “we’re making great progress”; The next 6 weeks - These are very concrete. This is your immediate plan. This is what your team know intimately. You know exactly what’s being built. Design work is well underway. This is a rolling timeline that is updated every week or two.","https://stormboard.com/templates/gallery/detail/666-roadmap",28, 25, 30], 
                    [30,'Weighted Impact Scoring','wis.svg', "Ranks product features on various criteria using a benefit-versus-cost analysis.", "The framework entails ranking several features on various criteria using a benefit-versus-cost analysis. One of the most challenging aspects of a Product Manager’s job is determining which features will become a part of the product, and which features will wither away on the backlog. The Weighted Scoring framework helps Product Managers to prioritize each feature with a simple scoring method.", "https://chisellabs.com/glossary/what-is-weighted-scoring/", "List out all the options you’d like to incorporate into your project or product without regard to the difficulty, priority, or any other factor. Now that we have a list of everything you’d like to accomplish, it’s time to figure out the criteria that will impact the weight of each option (e.g. cost, time, risk, quality, effort, etc.). Then, assign specific weight values to each criterion in the form of a percentage. Create a chart and fill in your options with whatever it is you are looking to prioritize, then score each option with a value of 1 through 5, or whatever range you wish to use.Now that you’ve scored each option, you’ll want to multiply each score by the weight, and then calculate the total score average for each one.","https://www.fool.com/the-ascent/small-business/project-management/articles/weighted-scoring-model/",31, 32, 33],
                    [31,'RICE','rice.svg', "Scores the features and intitiatives to determine what to put on roadmaps when developing the product.", "A scoring system that determines which products, features, and other initiatives to put on roadmaps by scoring these items according to 4 factors. Reach: how many people will this impact? (Estimate within a defined time period.); Impact: how much will this impact each person? (Massive = 3x, High = 2x, Medium = 1x, Low = 0.5x, Minimal = 0.25x.); Confidence: how confident are you in your estimates? (High = 100%, Medium = 80%, Low = 50%.); Effort: how many “person-months” will this take? (Use whole numbers and minimum of half a month – don’t get into the weeds of estimation).", "https://www.intercom.com/blog/rice-simple-prioritization-for-product-managers/", "To use the RICE scoring model, you evaluate each of your competing ideas (new products, product extensions, features, etc.) by scoring them according to the following formula: The first factor in determining your RICE score is to get a sense of how many people you estimate your initiative will reach in a given timeframe. You have to decide both what 'reach' means in this context and the timeframe over which you want to measure it. You can choose any time period—one month, a quarter, etc.—and you can decide that reach will refer to the number of customer transactions, free-trial signups, or how many existing users try your new feature.Impact can reflect a quantitative goal, such as how many new conversions for your project will result in when users encounter it, or a more qualitative objective such as increasing customer delight. The confidence component of your RICE score helps you control for projects in which your team has data to support one factor of your score but is relying more on intuition for another factor. Quantifying effort in this model is similar to scoring reach. You simply estimate the total number of resources (product, design, engineering, testing, etc.) needed to complete the initiative over a given period of time—typically 'person-months'—and that is your score.","https://www.figma.com/templates/rice-prioritization-template/",30, 32, 33],
                    [32,'MoSCoW','moscow.svg', "Creates a hierarchy of priorities before and during the project by sorting the requirements in categories of Must have, Should have, Could have, and Will not have.", "The acronym MoSCoW represents four categories of initiatives: must-have, should-have, could-have, and won’t-have, or will not have right now. Some companies also use the “W” in MoSCoW to mean “wish.” Although Dai Clegg developed the approach to help prioritize tasks around his team’s limited time, the MoSCoW method also works when a development team faces limitations other than time. What if a development team’s limiting factor is not a deadline but a tight budget imposed by the company? Working with the product managers, the team can use MoSCoW first to decide on the initiatives that represent must-haves and the should-haves. Then, using the development department’s budget as the guide, the team can figure out which items they can complete. ", "https://www.agilebusiness.org/dsdm-project-framework/moscow-prioririsation.html", "Before running a MoSCoW analysis, a few things need to happen. First, key stakeholders and the product team need to get aligned on objectives and prioritization factors. Then, all participants must agree on which initiatives to prioritize. At this point, your team should also discuss how they will settle any disagreements in prioritization. If you can establish how to resolve disputes before they come up, you can help prevent those disagreements from holding up progress. Finally, you’ll also want to reach a consensus on what percentage of resources you’d like to allocate to each category. With the groundwork complete, you may begin determining which category is most appropriate for each initiative. The details of the categories can be found from the 'Read more' button in the 'What is it?' section.","https://metroretro.io/templates/moscow-prioritization",30, 31, 33],
                    [33,'Kano Model','kano.svg', "Prioritizes the initiatives according to which features are most likely to delight customers.", "The Kano model helps product teams prioritize their work according to which features are most likely to delight customers. The team will rank each initiative according to its likelihood to please customers as well as its implementation cost. After, prioritize the features rated high delight and low cost. The Kano Model is one of many prioritization frameworks designed to help product teams prioritize initiatives. For example, Kano can help teams determine which features will satisfy and even delight customers. Product managers often use the Kano Model to prioritize potential new features by grouping them into categories. These feature categories can range from those that could disappoint customers to those likely to satisfy or even delight customers.", "https://kanomodel.com/", "Kano created a satisfaction scale to run from ‘Delighted’ (indicating high satisfaction or excitement) to ‘Frustrated’ (indicating low or no satisfaction). In addition, Kano created a functionality scale (also known as the  Investment, Sophistication, or Implementation scale) that runs from ‘None’ to ‘Best’. This represents what level of function the customer thinks a feature provides. Has the feature been implemented to the highest level? Is this feature emotionally well-received by the customer? Based on responses from the kano questionnaire, features can be plotted on the kano reaction graph based on its satisfaction and function level.","https://www.kanosurveys.com/",30, 31, 32]]

    for i in Frameworks:
        db.session.add(Framework(id=i[0],framework_name=i[1], icon=i[2], description=i[3], summary=i[4], what_resource=i[5], how_to_use=i[6], application_resource=i[7], related_framework_1=i[8], related_framework_2=i[9], related_framework_3=i[10]))
    db.session.commit()

#Create a route decorator 
@app.route('/', methods=['GET', 'POST'])
def index():
    return render_template("index.html")

@app.route('/library')
def library():
    framework = Framework
    return render_template("library.html", framework=framework)

@app.route('/q', methods=['GET', 'POST'])
def q():
    question = Question.query.get(1)
    option = Option
    return render_template("question.html", question=question, option=option)

@app.route('/rsp', methods=['GET', 'POST'])
def response():
    clck = int(request.form['clck'])
    next_q1 = int(request.form['next_q1'])
    next_q2 = int(request.form['next_q2'])
    framework1 = int(request.form['framework1'])
    framework2 = int(request.form['framework2'])

    if clck == 0:
        if next_q1 > 0:
            question = Question.query.get(next_q1)
            option = Option
            return render_template('question.html', question=question, option=option)
        if framework1 > 0:
            recommendation = Framework.query.get(framework1).id
            return redirect(url_for('framework', recommendation_id=recommendation))
    if clck == 1:
        if next_q2 > 0:
            question = Question.query.get(next_q2)
            option = Option
            return render_template('question.html', question=question, option=option)
        if framework2 > 0:
            recommendation = Framework.query.get(framework2).id
            return redirect(url_for('framework', recommendation_id=recommendation))
    else:
        return "Error"

@app.route('/framework/<recommendation_id>', methods=['GET', 'POST'])
def framework(recommendation_id):
    recommendation = Framework.query.get(recommendation_id)
    icon = recommendation.icon
    framework = Framework
    return render_template('recommendation.html', recommendation=recommendation, icon=icon, framework=framework)

if __name__=="__main__":
    db.create_all()
    insert_questions()
    insert_options()
    insert_frameworks()
    app.run(debug=True)
